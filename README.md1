#Printf(C-0x11)
#ALX Software Engineering Collaboration PROJECT

# Customise Printf Function

This function **\_printf()** writes output to the standard output stream with the format and options without making use of any of the standard library files. It was written to use a local buffer of 1024 bytes when printing although it can print larger sets of data.

The \_printf() function returns the total number of characters printed to the stdout(excluding the null byte at the end of strings) after a successful execution. If an output error is encountered, a negative value of -1 is returned.
The prototype of this function is:  **int _printf(const char *format, ...);***
This means that it has one mandatory format argument, and an extra number of arguments that can be none, or many.

**Format of the format string**

The format string is a character string starting and ending with double quotes. The format string is composed of zero or more directives; ordinary characters (not %), and conversion specifications, each of which results in fetching zero or more subsequent arguments.
Each conversion specification is introduced by the character **%** and ends with a **conversion specifier**

## Testing
The tests folder includes a mains.c file which will run a series of pairs of printf statements on many different combinations of specifiers, flag and options using both this version of print and stdlib printf, and output this to stdout. To run these tests, compile the entire project then run the resulting executable:
```gcc -o printf(test) *.c tests/mains.c
./printftest
```

//**************************** Authors ******************************//

@Diamond Kanu

@Samuel Ayitey
